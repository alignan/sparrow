/*
 * Copyright (c) 2016, Yanzi Networks AB.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holders nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */
/**
 * \file
 *         Sparrow TLV variables for instance Border Router Management
 * \author
 *         Niclas Finne <nfi@sics.se>
 *         Joakim Eriksson <joakime@sics.se>
 */

#ifndef INSTANCE_BRM_VAR_H_
#define INSTANCE_BRM_VAR_H_

#include "sparrow-oam.h"

typedef enum {
  BRM_COMMAND_NOP = 0,
  BRM_COMMAND_RPL_GLOBAL_REPAIR = 1,
} brm_command_t;

/* Product 0x0090DA0303010022 "Border Router Management" */
#define INSTANCE_BRM_OBJECT_TYPE 0x0090DA0303010022ULL
#define INSTANCE_BRM_LABEL       "Border Router Management"

#define VARIABLE_INTERFACE_NAME 0x100
#define VARIABLE_SERIAL_INTERFACE_NAME 0x101
#define VARIABLE_RADIO_CONTROL_API_VERSION 0x102
#define VARIABLE_RADIO_SERIAL_MODE 0x103
#define VARIABLE_RADIO_SERIAL_SEND_DELAY 0x104
#define VARIABLE_RADIO_SW_REVISION 0x105
#define VARIABLE_RADIO_BOOTLOADER_VERSION 0x106
#define VARIABLE_RADIO_CHASSIS_CAPABILITIES 0x107
#define VARIABLE_BRM_STAT_LENGTH 0x108
#define VARIABLE_BRM_STAT_DATA 0x109
#define VARIABLE_BRM_COMMAND 0x10a
#define VARIABLE_BRM_RPL_DAG_VERSION 0x10b

#define INSTANCE_BRM_DEBUG 1

#if INSTANCE_BRM_DEBUG
#define VARIABLE_BRM_STAT_DEBUG_LENGTH 0x200
#define VARIABLE_BRM_STAT_DEBUG_DATA   0x201
#endif /* INSTANCE_BRM_STAT_DEBUG */

static const sparrow_oam_variable_t instance_brm_variables[] = {
  { 0x100, 32, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_STRING ,  0 }, /* VARIABLE_INTERFACE_NAME */
  { 0x101, 32, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_STRING ,  0 }, /* VARIABLE_SERIAL_INTERFACE_NAME */
  { 0x102,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_RADIO_CONTROL_API_VERSION */
  { 0x103,  4, SPARROW_OAM_WRITABILITY_RW, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_RADIO_SERIAL_MODE */
  { 0x104,  4, SPARROW_OAM_WRITABILITY_RW, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_RADIO_SERIAL_SEND_DELAY */
  { 0x105, 16, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_RADIO_SW_REVISION */
  { 0x106,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_RADIO_BOOTLOADER_VERSION */
  { 0x107,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_RADIO_CHASSIS_CAPABILITIES */
  { 0x108,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_BRM_STAT_LENGTH */
  { 0x109,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_ARRAY  , SPARROW_OAM_VECTOR_DEPTH_DONT_CHECK }, /* VARIABLE_BRM_STAT_DATA */
  { 0x10a,  4, SPARROW_OAM_WRITABILITY_WO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_BRM_COMMAND */
  { 0x10b,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_BRM_RPL_DAG_VERSION */

#if INSTANCE_BRM_DEBUG
  { 0x200,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_INTEGER,  0 }, /* VARIABLE_BRM_STAT_DEBUG_LENGTH */
  { 0x201,  4, SPARROW_OAM_WRITABILITY_RO, SPARROW_OAM_FORMAT_ARRAY  , SPARROW_OAM_VECTOR_DEPTH_DONT_CHECK }, /* VARIABLE_BRM_STAT_DEBUG_DATA */
#endif /* INSTANCE_BRM_DEBUG */
};

#endif /* INSTANCE_BRM_VAR_H_ */
